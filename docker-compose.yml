services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: pos-sqlserver
    environment:
      SA_PASSWORD: "YourStrongPassword123!"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./Scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - pos-network
    restart: unless-stopped
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P "YourStrongPassword123!" -C -Q "SELECT 1"
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  pos-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pos-api
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      ConnectionStrings__DefaultConnection: "Server=sqlserver,1433;Database=POSSystemDB;User Id=sa;Password=YourStrongPassword123!;TrustServerCertificate=true;MultipleActiveResultSets=true"
      PosConfig__ConnectionString: "Server=sqlserver,1433;Database=POSSystemDB;User Id=sa;Password=YourStrongPassword123!;TrustServerCertificate=true"
      PosConfig__EnableSwagger: "false"
    ports:
      - "8080:8080"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - pos-network
    restart: unless-stopped

  pos-migrator:
    build:
      context: .
      dockerfile: Dockerfile.migrator
    container_name: pos-migrator
    environment:
      ConnectionString: "Server=sqlserver,1433;Database=POSSystemDB;User Id=sa;Password=YourStrongPassword123!;TrustServerCertificate=true;MultipleActiveResultSets=true"
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - pos-network
    restart: "no"

volumes:
  sqlserver_data:
    driver: local

networks:
  pos-network:
    driver: bridge
